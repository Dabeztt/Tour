{"ast":null,"code":"var _jsxFileName = \"E:\\\\thieu nang viet code\\\\cnpm\\\\Tour-master\\\\frontend\\\\src\\\\Components\\\\Booking\\\\PayPalCheckout.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useContext } from \"react\";\nimport Booking from \"./Booking.jsx\";\nimport ThankYou from \"../../Pages/ThankYou.jsx\";\nimport { AuthContext } from '../../context/AuthContext';\nimport { BASE_URL } from '../../utils/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPalCheckout = _ref => {\n  _s();\n  let {\n    totalAmount,\n    tour\n  } = _ref;\n  const paypal = useRef();\n  const [transactionStatus, setTransactionStatus] = useState(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    window.paypal.Buttons({\n      createOrder: (data, actions, err) => {\n        return actions.order.create({\n          intent: \"CAPTURE\",\n          purchase_units: [{\n            description: \"Tour Booking\",\n            amount: {\n              currency_code: \"VND\",\n              value: totalAmount.toString()\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        console.log(\"success\", order);\n        setTransactionStatus(\"success\");\n        try {\n          if (!user || user === undefined || user === null) {\n            return alert('Vui lòng đăng nhập');\n          }\n          const bookingData = {\n            userId: user._id,\n            userEmail: user.email,\n            tourName: tour.title,\n            fullName: \"\",\n            // You may want to adjust these fields according to your needs\n            phone: '',\n            guestSize: 1,\n            bookAt: ''\n          };\n          const res = await fetch(`${BASE_URL}/booking`, {\n            method: 'post',\n            headers: {\n              'content-type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(bookingData)\n          });\n          const result = await res.json();\n          if (!res.ok) {\n            return alert(result.message);\n          }\n          console.log(\"Booking successful:\", result);\n        } catch (err) {\n          console.error(\"Error while booking:\", err.message);\n          alert(\"Error while booking. Please try again later.\");\n        }\n      },\n      onError: err => {\n        console.log(err);\n        setTransactionStatus(\"failure\");\n      }\n    }).render(paypal.current);\n  }, [totalAmount, tour, user]);\n  if (transactionStatus === \"success\") {\n    return /*#__PURE__*/_jsxDEV(ThankYou, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  }\n  if (transactionStatus === \"failure\") {\n    return /*#__PURE__*/_jsxDEV(Booking, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paypal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(PayPalCheckout, \"Er1vNQKn96pmYbx/qIJpqx2xEAo=\");\n_c = PayPalCheckout;\nexport default PayPalCheckout;\nvar _c;\n$RefreshReg$(_c, \"PayPalCheckout\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useContext","Booking","ThankYou","AuthContext","BASE_URL","PayPalCheckout","totalAmount","tour","paypal","transactionStatus","setTransactionStatus","user","window","Buttons","createOrder","data","actions","err","order","create","intent","purchase_units","description","amount","currency_code","value","toString","onApprove","capture","console","log","undefined","alert","bookingData","userId","_id","userEmail","email","tourName","title","fullName","phone","guestSize","bookAt","res","fetch","method","headers","credentials","body","JSON","stringify","result","json","ok","message","error","onError","render","current"],"sources":["E:/thieu nang viet code/cnpm/Tour-master/frontend/src/Components/Booking/PayPalCheckout.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useContext } from \"react\";\r\nimport Booking from \"./Booking.jsx\";\r\nimport ThankYou from \"../../Pages/ThankYou.jsx\";\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { BASE_URL } from '../../utils/config';\r\n\r\nconst PayPalCheckout = ({ totalAmount, tour }) => {\r\n    const paypal = useRef();\r\n    const [transactionStatus, setTransactionStatus] = useState(null);\r\n    const { user } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        window.paypal.Buttons({\r\n            createOrder: (data, actions, err) => {\r\n                return actions.order.create({\r\n                    intent: \"CAPTURE\",\r\n                    purchase_units: [\r\n                        {\r\n                            description: \"Tour Booking\",\r\n                            amount: {\r\n                                currency_code: \"VND\",\r\n                                value: totalAmount.toString()\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture();\r\n                console.log(\"success\", order);\r\n                setTransactionStatus(\"success\");\r\n\r\n                try {\r\n                    if (!user || user === undefined || user === null) {\r\n                        return alert('Vui lòng đăng nhập');\r\n                    }\r\n\r\n                    const bookingData = {\r\n                        userId: user._id,\r\n                        userEmail: user.email,\r\n                        tourName: tour.title,\r\n                        fullName: \"\", // You may want to adjust these fields according to your needs\r\n                        phone: '',\r\n                        guestSize: 1,\r\n                        bookAt: ''\r\n                    };\r\n\r\n                    const res = await fetch(`${BASE_URL}/booking`, {\r\n                        method: 'post',\r\n                        headers: {\r\n                            'content-type': 'application/json'\r\n                        },\r\n                        credentials: 'include',\r\n                        body: JSON.stringify(bookingData)\r\n                    });\r\n\r\n                    const result = await res.json();\r\n\r\n                    if (!res.ok) {\r\n                        return alert(result.message);\r\n                    }\r\n                    console.log(\"Booking successful:\", result);\r\n                } catch (err) {\r\n                    console.error(\"Error while booking:\", err.message);\r\n                    alert(\"Error while booking. Please try again later.\");\r\n                }\r\n            },\r\n            onError: (err) => {\r\n                console.log(err);\r\n                setTransactionStatus(\"failure\");\r\n            }\r\n        }).render(paypal.current);\r\n    }, [totalAmount, tour, user]);\r\n\r\n    if (transactionStatus === \"success\") {\r\n        return <ThankYou />;\r\n    }\r\n\r\n    if (transactionStatus === \"failure\") {\r\n        return <Booking />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div ref={paypal}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PayPalCheckout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}