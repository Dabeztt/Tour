{"ast":null,"code":"class Payment {\n  constructor(paymentType) {\n    this.paymentType = paymentType;\n    this.paymentMethods = {\n      'direct': this.processDirectPayment,\n      'paypal': this.processPayPalPayment\n    };\n  }\n  processPayment(totalAmount) {\n    const paymentMethod = this.paymentMethods[this.paymentType];\n    if (!paymentMethod) {\n      throw new Error('Invalid payment type');\n    }\n    paymentMethod(totalAmount);\n  }\n  processDirectPayment(totalAmount) {\n    console.log(`Processing direct payment of ${totalAmount} USD`);\n    // Logic for processing direct payment\n  }\n\n  processPayPalPayment(totalAmount) {\n    console.log(`Processing PayPal payment of ${totalAmount} USD`);\n    // Logic for processing PayPal payment\n  }\n}\n\nexport default Payment;","map":{"version":3,"names":["Payment","constructor","paymentType","paymentMethods","processDirectPayment","processPayPalPayment","processPayment","totalAmount","paymentMethod","Error","console","log"],"sources":["E:/thieu nang viet code/cnpm/Tour-master/frontend/src/Components/Booking/Payment.js"],"sourcesContent":["class Payment {\r\n    constructor(paymentType) {\r\n        this.paymentType = paymentType;\r\n        this.paymentMethods = {\r\n            'direct': this.processDirectPayment,\r\n            'paypal': this.processPayPalPayment\r\n        };\r\n    }\r\n\r\n    processPayment(totalAmount) {\r\n        const paymentMethod = this.paymentMethods[this.paymentType];\r\n        if (!paymentMethod) {\r\n            throw new Error('Invalid payment type');\r\n        }\r\n        paymentMethod(totalAmount);\r\n    }\r\n\r\n    processDirectPayment(totalAmount) {\r\n        console.log(`Processing direct payment of ${totalAmount} USD`);\r\n        // Logic for processing direct payment\r\n    }\r\n\r\n    processPayPalPayment(totalAmount) {\r\n        console.log(`Processing PayPal payment of ${totalAmount} USD`);\r\n        // Logic for processing PayPal payment\r\n    }\r\n}\r\n\r\nexport default Payment;\r\n"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACVC,WAAW,CAACC,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,cAAc,GAAG;MAClB,QAAQ,EAAE,IAAI,CAACC,oBAAoB;MACnC,QAAQ,EAAE,IAAI,CAACC;IACnB,CAAC;EACL;EAEAC,cAAc,CAACC,WAAW,EAAE;IACxB,MAAMC,aAAa,GAAG,IAAI,CAACL,cAAc,CAAC,IAAI,CAACD,WAAW,CAAC;IAC3D,IAAI,CAACM,aAAa,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAC3C;IACAD,aAAa,CAACD,WAAW,CAAC;EAC9B;EAEAH,oBAAoB,CAACG,WAAW,EAAE;IAC9BG,OAAO,CAACC,GAAG,CAAE,gCAA+BJ,WAAY,MAAK,CAAC;IAC9D;EACJ;;EAEAF,oBAAoB,CAACE,WAAW,EAAE;IAC9BG,OAAO,CAACC,GAAG,CAAE,gCAA+BJ,WAAY,MAAK,CAAC;IAC9D;EACJ;AACJ;;AAEA,eAAeP,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}