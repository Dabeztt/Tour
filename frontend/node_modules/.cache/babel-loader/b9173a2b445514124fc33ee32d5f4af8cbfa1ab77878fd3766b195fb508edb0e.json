{"ast":null,"code":"// Define a base component\nclass BasicTour {\n  constructor(price) {\n    this.price = price;\n  }\n  getPrice() {\n    return this.price;\n  }\n}\n\n// Define a decorator class\nclass FeeDecorator {\n  constructor(tourComponent) {\n    this.tourComponent = tourComponent;\n  }\n  getPrice() {\n    return this.tourComponent.getPrice();\n  }\n}\n\n// Define concrete decorators\nclass ServiceFeeDecorator extends FeeDecorator {\n  getPrice() {\n    return super.getPrice() * 1.1; // Assume service fee is 10% of the price\n  }\n}\n\nclass InsuranceFeeDecorator extends FeeDecorator {\n  getPrice() {\n    return super.getPrice() * 1.05; // Assume insurance fee is 5% of the price\n  }\n}\n\n// Usage\nconst basicTourDataFromDatabase = {\n  price\n}; // Assume this is the data retrieved from the database\n\nconst basicTour = new BasicTour(basicTourDataFromDatabase.price); // Create the base tour object\n\nconst tourWithServiceFee = new ServiceFeeDecorator(basicTour);\nconsole.log(tourWithServiceFee.getPrice()); // Output: 110 (Base price + service fee)\n\nconst tourWithInsuranceFee = new InsuranceFeeDecorator(basicTour);\nconsole.log(tourWithInsuranceFee.getPrice()); // Output: 105 (Base price + insurance fee)\n\nconst tourWithBothFees = new InsuranceFeeDecorator(new ServiceFeeDecorator(basicTour));\nconsole.log(tourWithBothFees.getPrice()); // Output: 115 (Base price + service fee + insurance fee)","map":{"version":3,"names":["BasicTour","constructor","price","getPrice","FeeDecorator","tourComponent","ServiceFeeDecorator","InsuranceFeeDecorator","basicTourDataFromDatabase","basicTour","tourWithServiceFee","console","log","tourWithInsuranceFee","tourWithBothFees"],"sources":["E:/thieu nang viet code/cnpm/tour-management/frontend/src/Components/Booking/FeeDecorator.js"],"sourcesContent":["// Define a base component\r\nclass BasicTour {\r\n    constructor(price) {\r\n        this.price = price;\r\n    }\r\n\r\n    getPrice() {\r\n        return this.price;\r\n    }\r\n}\r\n\r\n// Define a decorator class\r\nclass FeeDecorator {\r\n    constructor(tourComponent) {\r\n        this.tourComponent = tourComponent;\r\n    }\r\n\r\n    getPrice() {\r\n        return this.tourComponent.getPrice();\r\n    }\r\n}\r\n\r\n// Define concrete decorators\r\nclass ServiceFeeDecorator extends FeeDecorator {\r\n    getPrice() {\r\n        return super.getPrice() * 1.1; // Assume service fee is 10% of the price\r\n    }\r\n}\r\n\r\nclass InsuranceFeeDecorator extends FeeDecorator {\r\n    getPrice() {\r\n        return super.getPrice() * 1.05; // Assume insurance fee is 5% of the price\r\n    }\r\n}\r\n\r\n// Usage\r\nconst basicTourDataFromDatabase = { price }; // Assume this is the data retrieved from the database\r\n\r\nconst basicTour = new BasicTour(basicTourDataFromDatabase.price); // Create the base tour object\r\n\r\nconst tourWithServiceFee = new ServiceFeeDecorator(basicTour);\r\nconsole.log(tourWithServiceFee.getPrice()); // Output: 110 (Base price + service fee)\r\n\r\nconst tourWithInsuranceFee = new InsuranceFeeDecorator(basicTour);\r\nconsole.log(tourWithInsuranceFee.getPrice()); // Output: 105 (Base price + insurance fee)\r\n\r\nconst tourWithBothFees = new InsuranceFeeDecorator(new ServiceFeeDecorator(basicTour));\r\nconsole.log(tourWithBothFees.getPrice()); // Output: 115 (Base price + service fee + insurance fee)\r\n"],"mappings":"AAAA;AACA,MAAMA,SAAS,CAAC;EACZC,WAAW,CAACC,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EAEAC,QAAQ,GAAG;IACP,OAAO,IAAI,CAACD,KAAK;EACrB;AACJ;;AAEA;AACA,MAAME,YAAY,CAAC;EACfH,WAAW,CAACI,aAAa,EAAE;IACvB,IAAI,CAACA,aAAa,GAAGA,aAAa;EACtC;EAEAF,QAAQ,GAAG;IACP,OAAO,IAAI,CAACE,aAAa,CAACF,QAAQ,EAAE;EACxC;AACJ;;AAEA;AACA,MAAMG,mBAAmB,SAASF,YAAY,CAAC;EAC3CD,QAAQ,GAAG;IACP,OAAO,KAAK,CAACA,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC;EACnC;AACJ;;AAEA,MAAMI,qBAAqB,SAASH,YAAY,CAAC;EAC7CD,QAAQ,GAAG;IACP,OAAO,KAAK,CAACA,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;EACpC;AACJ;;AAEA;AACA,MAAMK,yBAAyB,GAAG;EAAEN;AAAM,CAAC,CAAC,CAAC;;AAE7C,MAAMO,SAAS,GAAG,IAAIT,SAAS,CAACQ,yBAAyB,CAACN,KAAK,CAAC,CAAC,CAAC;;AAElE,MAAMQ,kBAAkB,GAAG,IAAIJ,mBAAmB,CAACG,SAAS,CAAC;AAC7DE,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAACP,QAAQ,EAAE,CAAC,CAAC,CAAC;;AAE5C,MAAMU,oBAAoB,GAAG,IAAIN,qBAAqB,CAACE,SAAS,CAAC;AACjEE,OAAO,CAACC,GAAG,CAACC,oBAAoB,CAACV,QAAQ,EAAE,CAAC,CAAC,CAAC;;AAE9C,MAAMW,gBAAgB,GAAG,IAAIP,qBAAqB,CAAC,IAAID,mBAAmB,CAACG,SAAS,CAAC,CAAC;AACtFE,OAAO,CAACC,GAAG,CAACE,gBAAgB,CAACX,QAAQ,EAAE,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}